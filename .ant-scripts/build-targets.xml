<?xml version="1.0"?>
<project>
        <description>
                Common functional targets shared across all submodules.
        </description>

        <import file="${ant.scripts}/build-reports.xml" />
        <import file="${ant.scripts}/build-test.xml" />

        <taskdef resource="net/sf/antcontrib/antcontrib.properties">
                <classpath>
                        <fileset refid="ant-contrib.lib" />
                </classpath>
        </taskdef>

        <macrodef name="_build-all">
                <attribute name="target" />
                <sequential>
                        <subant target="@{target}">
                                <filelist refid="subprojects" />
                        </subant>
                </sequential>
        </macrodef>

        <macrodef name="_bump-number">
                <attribute name="level" default="build.number" />
                <sequential>
                        <propertyfile
                            file="${ant.scripts}/build-numbers.properties"
                            comment=" Version numbers">
                                <entry key="@{level}" default="0" type="int"
                                    operation="+" />
                        </propertyfile>
                </sequential>
        </macrodef>

        <macrodef name="_zero-number">
                <attribute name="level" default="build.number" />
                <sequential>
                        <propertyfile
                            file="${ant.scripts}/build-numbers.properties"
                            comment=" Version numbers">
                                <entry key="@{level}" value="0" default="0"
                                    type="int" />
                        </propertyfile>
                </sequential>
        </macrodef>

        <target name="--check-build-numbers-file">
                <available file="${ant.scripts}/build-numbers.properties"
                    property="build.numbers.file.exists" />
        </target>

        <target name="--create-build-numbers-file"
            unless="build.numbers.file.exists">
                <propertyfile file="${ant.scripts}/build-numbers.properties"
                    comment=" Version numbers">
                        <entry key="build.major" default="${build.major}"
                            type="int" />
                        <entry key="build.minor" default="${build.minor}"
                            type="int" />
                        <entry key="build.number" default="${build.number}"
                            type="int" />
                </propertyfile>
        </target>

        <target name="--bump">
                <_bump-number />
        </target>

        <target name="--bump-major">
                <_bump-number level="build.major" />
        </target>

        <target name="--bump-minor">
                <_bump-number level="build.minor" />
        </target>

        <target name="--zero">
                <_zero-number />
        </target>

        <target name="--zero-minor">
                <_zero-number level="build.minor" />
        </target>

        <target name="--clean">
                <delete dir="target" />
        </target>

        <target name="--clean-all">
                <_build-all target="clean" />
        </target>

        <target name="--compile-init">
                <available property="should.compile" file="src/main/java" />
                <available property="should.compile.copy.resources"
                    file="src/main/resources" />
                <mkdir dir="target/main/classes" />
        </target>

        <target name="--compile" if="should.compile">
                <javac srcdir="src/main/java" destdir="target/main/classes"
                    classpathref="compile.path" debug="${javac.debug}"
                    target="${javac.target}" />
        </target>

        <target name="--compile-copy-resources"
            if="should.compile.copy.resources">
                <copy todir="target/main/classes" includeEmptyDirs="false">
                        <fileset dir="src/main/resources"
                            excludes="**/.DS_Store,**/*.properties" />
                </copy>
        </target>

        <target name="--compile-all">
                <_build-all target="-compile" />
        </target>

        <target name="--javadoc-init">
                <available property="should.javadoc" file="src/main/java" />
                <mkdir
                    dir="target/docs/${ant.project.name}-${version.number}/api" />
        </target>

        <target name="--javadoc" if="should.javadoc">
                <javadoc
                    destdir="target/docs/${ant.project.name}-${version.number}/api"
                    breakiterator="yes" failonerror="true"
                    classpathref="compile.out">
                        <packageset dir="src/main/java" />
                </javadoc>
        </target>

        <target name="--javadoc-all">
                <_build-all target="-javadoc" />
        </target>

        <target name="--package-init">
                <mkdir dir="target/dist" />
        </target>

        <target name="--package-jar">
                <jar
                    destfile="target/dist/${ant.project.name}-${version.number}.jar"
                    duplicate="fail">
                        <fileset dir="target/main/classes" />
                </jar>
        </target>

        <target name="--package-all">
                <!-- Must maintain & sync packaging steps manually to avoid compiling, testing, and javadocing each subproject twice -->
                <_build-all target="-package" />
        </target>

        <target name="--package-docs">
                <zip
                    destfile="target/dist/${ant.project.name}-docs-${version.number}.zip"
                    duplicate="fail">
                        <fileset dir="target/docs"
                            includes="${ant.project.name}-${version.number}/**" />
                </zip>
        </target>

        <target name="--package-src-init">
                <mkdir dir="target/src/${ant.project.name}-${version.number}" />
                <copy todir="target/src/${ant.project.name}-${version.number}"
                    includeEmptyDirs="true" failonerror="false">
                        <fileset dir="."
                            excludes=".git/,.idea/workspace.xml,**/.DS_Store,**/target/" />
                </copy>
        </target>

        <target name="--package-src">
                <zip
                    destfile="target/dist/${ant.project.name}-src-${version.number}.zip"
                    duplicate="fail">
                        <fileset dir="target/src"
                            includes="${ant.project.name}-${version.number}/**" />
                </zip>
        </target>

        <target name="--release-init">
                <mkdir dir="${project.root}/target/dist" />
                <mkdir dir="${project.root}/target/modules/jars" />
                <copy todir="${project.root}/target/modules/jars"
                    flatten="true">
                        <fileset dir="${project.root}"
                            includes="*/target/dist/*-${version.number}.jar" />
                </copy>
        </target>

        <target name="--release-clean">
                <delete dir="${project.root}/target" />
        </target>

        <target name="--release">
                <zip
                    destfile="${project.root}/target/dist/${ant.project.name}-${version.number}.zip"
                    duplicate="fail">
                        <fileset dir="${project.root}/target/modules/jars"
                            includes="*-${version.number}.jar" />
                </zip>
        </target>

        <target name="--release-docs-init">
                <mkdir dir="${project.root}/target/modules/docs" />
                <copy todir="${project.root}/target/modules/docs"
                    flatten="true">
                        <fileset dir="${project.root}"
                            includes="*/target/dist/*-docs-${version.number}.zip" />
                </copy>
        </target>

        <target name="--release-docs">
                <zip
                    destfile="${project.root}/target/dist/${ant.project.name}-docs-${version.number}.zip"
                    duplicate="fail">
                        <fileset dir="${project.root}/target/modules/docs"
                            includes="*-docs-${version.number}.zip" />
                </zip>
        </target>

        <target name="--release-src-init">
                <mkdir
                    dir="${project.root}/target/src/${ant.project.name}-${version.number}" />
                <copy
                    todir="${project.root}/target/src/${ant.project.name}-${version.number}"
                    includeEmptyDirs="true"
                    failonerror="false">
                        <fileset dir="${project.root}"
                            excludes="**/.DS_Store,**/target/" />
                </copy>
        </target>

        <target name="--release-src">
                <zip
                    destfile="${project.root}/target/dist/${ant.project.name}-src-${version.number}.zip"
                    duplicate="fail">
                        <fileset dir="${project.root}/target/src"
                            includes="${ant.project.name}-${version.number}/**" />
                </zip>
        </target>

        <target name="--checkstyle">
                <mkdir dir="target/checkstyle" />
                <mkdir dir="target/reports" />
                <checkstyle failOnViolation="false"
                    failureProperty="checkstyle.errors"
                    config="${project.root}/checkstyle.xml">
                        <property key="checkstyle.cache.file"
                            file="target/checkstyle/cachefile" />
                        <fileset dir="src/main/java" includes="**/*.java" />
                        <formatter type="xml"
                            toFile="${basedir}/target/checkstyle/checkstyle_errors.xml" />
                </checkstyle>
                <xslt in="target/checkstyle/checkstyle_errors.xml"
                    out="target/reports/checkstyle_report.html"
                    style="${libs}/checkstyle/v5.1/contrib/checkstyle-simple.xsl" />
                <fail if="checkstyle.errors"
                    message="Please remember to flush after coding!" />
        </target>

        <target name="--test-all">
                <_build-all target="-test" />
        </target>
</project>
